"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/url-join";
exports.ids = ["vendor-chunks/url-join"];
exports.modules = {

/***/ "(ssr)/./node_modules/url-join/lib/url-join.js":
/*!***********************************************!*\
  !*** ./node_modules/url-join/lib/url-join.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n(function(name, context, definition) {\n    if ( true && module.exports) module.exports = definition();\n    else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    else {}\n})(\"urljoin\", void 0, function() {\n    function normalize(strArray) {\n        var resultArray = [];\n        if (strArray.length === 0) {\n            return \"\";\n        }\n        if (typeof strArray[0] !== \"string\") {\n            throw new TypeError(\"Url must be a string. Received \" + strArray[0]);\n        }\n        // If the first part is a plain protocol, we combine it with the next part.\n        if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n            var first = strArray.shift();\n            strArray[0] = first + strArray[0];\n        }\n        // There must be two or three slashes in the file protocol, two slashes in anything else.\n        if (strArray[0].match(/^file:\\/\\/\\//)) {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1:///\");\n        } else {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1://\");\n        }\n        for(var i = 0; i < strArray.length; i++){\n            var component = strArray[i];\n            if (typeof component !== \"string\") {\n                throw new TypeError(\"Url must be a string. Received \" + component);\n            }\n            if (component === \"\") {\n                continue;\n            }\n            if (i > 0) {\n                // Removing the starting slashes for each component but the first.\n                component = component.replace(/^[\\/]+/, \"\");\n            }\n            if (i < strArray.length - 1) {\n                // Removing the ending slashes for each component but the last.\n                component = component.replace(/[\\/]+$/, \"\");\n            } else {\n                // For the last component we will combine multiple slashes to a single one.\n                component = component.replace(/[\\/]+$/, \"/\");\n            }\n            resultArray.push(component);\n        }\n        var str = resultArray.join(\"/\");\n        // Each input component is now separated by a single slash except the possible first plain protocol part.\n        // remove trailing slash before parameters or hash\n        str = str.replace(/\\/(\\?|&|#[^!])/g, \"$1\");\n        // replace ? in parameters with &\n        var parts = str.split(\"?\");\n        str = parts.shift() + (parts.length > 0 ? \"?\" : \"\") + parts.join(\"&\");\n        return str;\n    }\n    return function() {\n        var input;\n        if (typeof arguments[0] === \"object\") {\n            input = arguments[0];\n        } else {\n            input = [].slice.call(arguments);\n        }\n        return normalize(input);\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXJsLWpvaW4vbGliL3VybC1qb2luLmpzIiwibWFwcGluZ3MiOiI7QUFBQyxVQUFVQSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsVUFBVTtJQUNsQyxJQUFJLEtBQWtCLElBQWVDLE9BQU9DLE9BQU8sRUFBRUQsT0FBT0MsT0FBTyxHQUFHRjtTQUNqRSxJQUFJLElBQTBDLEVBQUVHLG9DQUFPSCxVQUFVQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtHQUFDQTtTQUNsRUQsRUFBNkJDO0FBQ3BDLEdBQUcsV0FBVyxRQUFNO0lBRWxCLFNBQVNLLFVBQVdDLFFBQVE7UUFDMUIsSUFBSUMsY0FBYyxFQUFFO1FBQ3BCLElBQUlELFNBQVNFLE1BQU0sS0FBSyxHQUFHO1lBQUUsT0FBTztRQUFJO1FBRXhDLElBQUksT0FBT0YsUUFBUSxDQUFDLEVBQUUsS0FBSyxVQUFVO1lBQ25DLE1BQU0sSUFBSUcsVUFBVSxvQ0FBb0NILFFBQVEsQ0FBQyxFQUFFO1FBQ3JFO1FBRUEsMkVBQTJFO1FBQzNFLElBQUlBLFFBQVEsQ0FBQyxFQUFFLENBQUNJLEtBQUssQ0FBQyxtQkFBbUJKLFNBQVNFLE1BQU0sR0FBRyxHQUFHO1lBQzVELElBQUlHLFFBQVFMLFNBQVNNLEtBQUs7WUFDMUJOLFFBQVEsQ0FBQyxFQUFFLEdBQUdLLFFBQVFMLFFBQVEsQ0FBQyxFQUFFO1FBQ25DO1FBRUEseUZBQXlGO1FBQ3pGLElBQUlBLFFBQVEsQ0FBQyxFQUFFLENBQUNJLEtBQUssQ0FBQyxpQkFBaUI7WUFDckNKLFFBQVEsQ0FBQyxFQUFFLEdBQUdBLFFBQVEsQ0FBQyxFQUFFLENBQUNPLE9BQU8sQ0FBQyxpQkFBaUI7UUFDckQsT0FBTztZQUNMUCxRQUFRLENBQUMsRUFBRSxHQUFHQSxRQUFRLENBQUMsRUFBRSxDQUFDTyxPQUFPLENBQUMsaUJBQWlCO1FBQ3JEO1FBRUEsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlSLFNBQVNFLE1BQU0sRUFBRU0sSUFBSztZQUN4QyxJQUFJQyxZQUFZVCxRQUFRLENBQUNRLEVBQUU7WUFFM0IsSUFBSSxPQUFPQyxjQUFjLFVBQVU7Z0JBQ2pDLE1BQU0sSUFBSU4sVUFBVSxvQ0FBb0NNO1lBQzFEO1lBRUEsSUFBSUEsY0FBYyxJQUFJO2dCQUFFO1lBQVU7WUFFbEMsSUFBSUQsSUFBSSxHQUFHO2dCQUNULGtFQUFrRTtnQkFDbEVDLFlBQVlBLFVBQVVGLE9BQU8sQ0FBQyxVQUFVO1lBQzFDO1lBQ0EsSUFBSUMsSUFBSVIsU0FBU0UsTUFBTSxHQUFHLEdBQUc7Z0JBQzNCLCtEQUErRDtnQkFDL0RPLFlBQVlBLFVBQVVGLE9BQU8sQ0FBQyxVQUFVO1lBQzFDLE9BQU87Z0JBQ0wsMkVBQTJFO2dCQUMzRUUsWUFBWUEsVUFBVUYsT0FBTyxDQUFDLFVBQVU7WUFDMUM7WUFFQU4sWUFBWVMsSUFBSSxDQUFDRDtRQUVuQjtRQUVBLElBQUlFLE1BQU1WLFlBQVlXLElBQUksQ0FBQztRQUMzQix5R0FBeUc7UUFFekcsa0RBQWtEO1FBQ2xERCxNQUFNQSxJQUFJSixPQUFPLENBQUMsbUJBQW1CO1FBRXJDLGlDQUFpQztRQUNqQyxJQUFJTSxRQUFRRixJQUFJRyxLQUFLLENBQUM7UUFDdEJILE1BQU1FLE1BQU1QLEtBQUssS0FBTU8sQ0FBQUEsTUFBTVgsTUFBTSxHQUFHLElBQUksTUFBSyxFQUFDLElBQUtXLE1BQU1ELElBQUksQ0FBQztRQUVoRSxPQUFPRDtJQUNUO0lBRUEsT0FBTztRQUNMLElBQUlJO1FBRUosSUFBSSxPQUFPQyxTQUFTLENBQUMsRUFBRSxLQUFLLFVBQVU7WUFDcENELFFBQVFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3RCLE9BQU87WUFDTEQsUUFBUSxFQUFFLENBQUNFLEtBQUssQ0FBQ0MsSUFBSSxDQUFDRjtRQUN4QjtRQUVBLE9BQU9qQixVQUFVZ0I7SUFDbkI7QUFFRiIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYzIwX2NhaXJvX3JlYWN0Ly4vbm9kZV9tb2R1bGVzL3VybC1qb2luL2xpYi91cmwtam9pbi5qcz84OTE5Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAobmFtZSwgY29udGV4dCwgZGVmaW5pdGlvbikge1xuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbigpO1xuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIGRlZmluZShkZWZpbml0aW9uKTtcbiAgZWxzZSBjb250ZXh0W25hbWVdID0gZGVmaW5pdGlvbigpO1xufSkoJ3VybGpvaW4nLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG5cbiAgZnVuY3Rpb24gbm9ybWFsaXplIChzdHJBcnJheSkge1xuICAgIHZhciByZXN1bHRBcnJheSA9IFtdO1xuICAgIGlmIChzdHJBcnJheS5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnOyB9XG5cbiAgICBpZiAodHlwZW9mIHN0ckFycmF5WzBdICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVXJsIG11c3QgYmUgYSBzdHJpbmcuIFJlY2VpdmVkICcgKyBzdHJBcnJheVswXSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlIGZpcnN0IHBhcnQgaXMgYSBwbGFpbiBwcm90b2NvbCwgd2UgY29tYmluZSBpdCB3aXRoIHRoZSBuZXh0IHBhcnQuXG4gICAgaWYgKHN0ckFycmF5WzBdLm1hdGNoKC9eW14vOl0rOlxcLyokLykgJiYgc3RyQXJyYXkubGVuZ3RoID4gMSkge1xuICAgICAgdmFyIGZpcnN0ID0gc3RyQXJyYXkuc2hpZnQoKTtcbiAgICAgIHN0ckFycmF5WzBdID0gZmlyc3QgKyBzdHJBcnJheVswXTtcbiAgICB9XG5cbiAgICAvLyBUaGVyZSBtdXN0IGJlIHR3byBvciB0aHJlZSBzbGFzaGVzIGluIHRoZSBmaWxlIHByb3RvY29sLCB0d28gc2xhc2hlcyBpbiBhbnl0aGluZyBlbHNlLlxuICAgIGlmIChzdHJBcnJheVswXS5tYXRjaCgvXmZpbGU6XFwvXFwvXFwvLykpIHtcbiAgICAgIHN0ckFycmF5WzBdID0gc3RyQXJyYXlbMF0ucmVwbGFjZSgvXihbXi86XSspOlxcLyovLCAnJDE6Ly8vJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ckFycmF5WzBdID0gc3RyQXJyYXlbMF0ucmVwbGFjZSgvXihbXi86XSspOlxcLyovLCAnJDE6Ly8nKTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ckFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgY29tcG9uZW50ID0gc3RyQXJyYXlbaV07XG5cbiAgICAgIGlmICh0eXBlb2YgY29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVcmwgbXVzdCBiZSBhIHN0cmluZy4gUmVjZWl2ZWQgJyArIGNvbXBvbmVudCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb21wb25lbnQgPT09ICcnKSB7IGNvbnRpbnVlOyB9XG5cbiAgICAgIGlmIChpID4gMCkge1xuICAgICAgICAvLyBSZW1vdmluZyB0aGUgc3RhcnRpbmcgc2xhc2hlcyBmb3IgZWFjaCBjb21wb25lbnQgYnV0IHRoZSBmaXJzdC5cbiAgICAgICAgY29tcG9uZW50ID0gY29tcG9uZW50LnJlcGxhY2UoL15bXFwvXSsvLCAnJyk7XG4gICAgICB9XG4gICAgICBpZiAoaSA8IHN0ckFycmF5Lmxlbmd0aCAtIDEpIHtcbiAgICAgICAgLy8gUmVtb3ZpbmcgdGhlIGVuZGluZyBzbGFzaGVzIGZvciBlYWNoIGNvbXBvbmVudCBidXQgdGhlIGxhc3QuXG4gICAgICAgIGNvbXBvbmVudCA9IGNvbXBvbmVudC5yZXBsYWNlKC9bXFwvXSskLywgJycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRm9yIHRoZSBsYXN0IGNvbXBvbmVudCB3ZSB3aWxsIGNvbWJpbmUgbXVsdGlwbGUgc2xhc2hlcyB0byBhIHNpbmdsZSBvbmUuXG4gICAgICAgIGNvbXBvbmVudCA9IGNvbXBvbmVudC5yZXBsYWNlKC9bXFwvXSskLywgJy8nKTtcbiAgICAgIH1cblxuICAgICAgcmVzdWx0QXJyYXkucHVzaChjb21wb25lbnQpO1xuXG4gICAgfVxuXG4gICAgdmFyIHN0ciA9IHJlc3VsdEFycmF5LmpvaW4oJy8nKTtcbiAgICAvLyBFYWNoIGlucHV0IGNvbXBvbmVudCBpcyBub3cgc2VwYXJhdGVkIGJ5IGEgc2luZ2xlIHNsYXNoIGV4Y2VwdCB0aGUgcG9zc2libGUgZmlyc3QgcGxhaW4gcHJvdG9jb2wgcGFydC5cblxuICAgIC8vIHJlbW92ZSB0cmFpbGluZyBzbGFzaCBiZWZvcmUgcGFyYW1ldGVycyBvciBoYXNoXG4gICAgc3RyID0gc3RyLnJlcGxhY2UoL1xcLyhcXD98JnwjW14hXSkvZywgJyQxJyk7XG5cbiAgICAvLyByZXBsYWNlID8gaW4gcGFyYW1ldGVycyB3aXRoICZcbiAgICB2YXIgcGFydHMgPSBzdHIuc3BsaXQoJz8nKTtcbiAgICBzdHIgPSBwYXJ0cy5zaGlmdCgpICsgKHBhcnRzLmxlbmd0aCA+IDAgPyAnPyc6ICcnKSArIHBhcnRzLmpvaW4oJyYnKTtcblxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbnB1dDtcblxuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09PSAnb2JqZWN0Jykge1xuICAgICAgaW5wdXQgPSBhcmd1bWVudHNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGlucHV0ID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBub3JtYWxpemUoaW5wdXQpO1xuICB9O1xuXG59KTtcbiJdLCJuYW1lcyI6WyJuYW1lIiwiY29udGV4dCIsImRlZmluaXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmaW5lIiwiYW1kIiwibm9ybWFsaXplIiwic3RyQXJyYXkiLCJyZXN1bHRBcnJheSIsImxlbmd0aCIsIlR5cGVFcnJvciIsIm1hdGNoIiwiZmlyc3QiLCJzaGlmdCIsInJlcGxhY2UiLCJpIiwiY29tcG9uZW50IiwicHVzaCIsInN0ciIsImpvaW4iLCJwYXJ0cyIsInNwbGl0IiwiaW5wdXQiLCJhcmd1bWVudHMiLCJzbGljZSIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/url-join/lib/url-join.js\n");

/***/ })

};
;